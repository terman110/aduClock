#ifndef __NUM_CHAR_H__
#define __NUM_CHAR_H__

//  Character width
const int WS = 4;

// Selected character sets
int char_index = 0;
// Number of character sets
const int charN = 3;

//  Character array
const byte NUM[charN][10][WS*8/8] = 
{
  // 7SEG CHARS
  {
    // 0
    { 
      B11111001,
      B10011001,
      B10011001,
      B10011111
    }
    ,
    // 1
    { 
      B00010001,
      B00010001,
      B00010001,
      B00010001
    }
    ,
    // 2
    { 
      B11110001,
      B00010001,
      B11111000,
      B10001111
    }
    ,
    // 3
    { 
      B11110001,
      B00010001,
      B01110001,
      B00011111
    }
    ,
    // 4
    { 
      B10011001,
      B10011001,
      B11110001,
      B00010001
    }
    ,
    // 5
    { 
      B11111000,
      B10001000,
      B11110001,
      B00011111
    }
    ,
    // 6
    { 
      B11111000,
      B10001000,
      B11111001,
      B10011111
    }
    ,
    // 7
    { 
      B11110001,
      B00010001,
      B00010001,
      B00010001
    }
    ,
    // 8
    { 
      B11111001,
      B10011001,
      B11111001,
      B10011111
    }
    ,
    // 9
    { 
      B11111001,
      B10011111,
      B00010001,
      B00011111
     }
  }
  ,
  {
  // SEVEN_SEG_CHAR
    // 0
    { 
      B01101001,
      B10011001,
      B10011001,
      B10010110
    }
    ,
    // 1
    { 
      B00010011,
      B01010001,
      B00010001,
      B00010001
    }
    ,
    // 2
    { 
      B01101001,
      B00010001,
      B00100100,
      B10001111
    }
    ,
    // 3
    { 
      B01101001,
      B00010001,
      B01100001,
      B10010110
    }
    ,
    // 4
    { 
      B10001000,
      B10101010,
      B11110010,
      B00100010
    }
    ,
    // 5
    { 
      B11111000,
      B10001000,
      B01100001,
      B10010110
    }
    ,
    // 6
    { 
      B01101001,
      B10001000,
      B11101001,
      B10010110
    }
    ,
    // 7
    { 
      B11110001,
      B00010010,
      B01000100,
      B01000100
    }
    ,
    // 8
    { 
      B01101001,
      B10011001,
      B01101001,
      B10010110
    }
    ,
    // 9
    { 
      B01101001,
      B10011001,
      B01110001,
      B10010110
    }
  }
  ,
  {
  // NICE CHARS
    // 0
    { 
      B00000000,
      B00000000,
      B00000000,
      B00000000,
    }
    ,
    // 1
    { 
      B00000000,
      B00000000,
      B00000000,
      B01100000,
    }
    ,
    // 2
    { 
      B00000000,
      B00000000,
      B01100000,
      B00000000,
    }
    ,
    // 3
    { 
      B00000000,
      B00000000,
      B01100000,
      B01100000,
    }
    ,
    // 4
    { 
      B00000000,
      B01100000,
      B00000000,
      B00000000,
    }
    ,
    // 5
    { 
      B00000000,
      B01100000,
      B00000000,
      B01100000,
    }
    ,
    // 6
    { 
      B00000000,
      B01100000,
      B01100000,
      B00000000,
    }
    ,
    // 7
    { 
      B00000000,
      B01100000,
      B01100000,
      B01100000,
    }
    ,
    // 8
    { 
      B01100000,
      B00000000,
      B00000000,
      B00000000,
    }
    ,
    // 9
    { 
      B01100000,
      B00000000,
      B00000000,
      B01100000,
    }
  }
};

const byte NUM_H[8] = 
{
  B01000010,
  B01000010,
  B01000010,
  B01000010,
  B01111110,
  B01000010,
  B01000010,
  B01000010
};

const byte NUM_M[8] = 
{
  B01000010,
  B01100110,
  B01011010,
  B01000010,
  B01000010,
  B01000010,
  B01000010,
  B01000010
};
#endif // __NUM_CHAR_H__


